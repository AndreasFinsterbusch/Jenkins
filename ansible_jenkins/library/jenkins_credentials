#!/usr/bin/python
# -*- coding: utf-8 -*-

from ansible.module_utils.basic import AnsibleModule
import os
import time


def wait_for_file(file_, timeout):
    timeout = time.time() + timeout
    while True:
        if os.path.exists(file_):
            return
        elif time.time() < timeout:
            time.sleep(1)
        else:
            module.fail_json(msg="Source %s not found" % (to_text(file_)))


def read_file(file_):
    try:
        with open(file_) as f:
            for line in f:
                yield line
    except IOError as e:
        module.fail_json(msg=e.message)


def read_password(file_):
    lines = list(read_file(file_))
    if not lines:
        module.fail_json(msg="Password file %s does not contain a password" % (file_str))
    return lines[0].strip()


def ldap_used(file_):
    for line in read_file(file_):
        if 'ldap' in line:
            return True
    return False


def main():
    """
    This module tries to determine automatically whehter jenkins still runs with the initial configuration
    and password, or if it is already configured for LDAP.
    Depending on this decision different credentials will be returned, to be then used in jenkins_plugin module.

    :return:The credentials (credentials key) to use as params parameter for jenkins_plugin plugin.
    """
    global module
    module = AnsibleModule(
        argument_spec=dict(
            jenkins_home=dict(default='/var/lib/jenkins', type='path'),
            url=dict(default='http://localhost:8080', type='str'),
            user=dict(default='admin', type='str'),
            password=dict(default='', type='str'),
            timeout=dict(default=30, type='int'),
        ),
        supports_check_mode=True,
    )

    jenkins_home = module.params['jenkins_home']

    user = module.params['user']
    password = module.params['password']

    if not ldap_used(os.path.join(jenkins_home, 'config.xml')):
        pw_file = os.path.join(jenkins_home, 'secrets', 'initialAdminPassword')
        wait_for_file(pw_file, module.params['timeout'])
        user = 'admin'
        password = read_password(pw_file)

    module.exit_json(credentials={'url': module.params['url'],
                                  'url_username': user,
                                  'url_password': password},
                     changed=False)


if __name__ == "__main__":
    main()
